// Teste para verificar filtragem de v√≠deos por empresa
const testVideoFiltering = async () => {
    try {
        console.log('üß™ Testando filtragem de v√≠deos por empresa...')

        // Verificar dados do localStorage
        const companyData = localStorage.getItem('company')
        const company = companyData ? JSON.parse(companyData) : null
        console.log('üè¢ Dados da empresa no localStorage:', company)

        if (!company?.id) {
            console.log('‚ùå Company ID n√£o encontrado no localStorage')
            return
        }

        // Testar API sem filtro
        console.log('üì° Testando API sem filtro...')
        const responseAll = await fetch('/api/videos/management')
        const dataAll = await responseAll.json()
        console.log(`üì∫ Total de v√≠deos no sistema: ${dataAll.videos?.length || 0}`)

        // Testar API com filtro de empresa
        console.log(`üì° Testando API com filtro da empresa ${company.id}...`)
        const responseFiltered = await fetch(`/api/videos/management?company_id=${company.id}`)
        const dataFiltered = await responseFiltered.json()
        console.log(`üì∫ V√≠deos filtrados para empresa: ${dataFiltered.videos?.length || 0}`)

        if (dataFiltered.videos?.length > 0) {
            console.log('üìã V√≠deos encontrados:')
            dataFiltered.videos.forEach((video, index) => {
                console.log(`${index + 1}. "${video.title}" - Tipo: ${video.created_by_type} - Company ID: ${video.company_id}`)
            })
        }

    } catch (error) {
        console.error('‚ùå Erro no teste:', error)
    }
}

// Execute o teste
testVideoFiltering()